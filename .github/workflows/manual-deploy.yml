name: Recover Deploy (multi-environment with validation)

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "デプロイ環境"
        required: true
        type: choice
        options:
          - rc
          - pre-stg1
          - pre-stg2
          - pre-stg3
          - pre-stg4
          - pre-stg5
          - stg
          - prd
      ref_name:
        description: "タグ or ブランチ名（例: v1.2.3, main）"
        required: true

jobs:
  input-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate ref and environment match
        run: |
          echo "🔍 入力の妥当性を検証中..."
          REF="${{ github.event.inputs.ref_name }}"
          ENV="${{ github.event.inputs.environment }}"
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          REPO_URL="https://${TOKEN}@github.com/${GITHUB_REPOSITORY}.git"


          if git ls-remote --tags "$REPO_URL" "refs/tags/${REF}" | grep -q .; then
            REF_TYPE="tag"
          elif git ls-remote --heads "$REPO_URL" "refs/heads/${REF}" | grep -q .; then
            REF_TYPE="branch"
          else
            echo "❌ エラー: 入力された '${REF}' は存在しないタグ・ブランチです"
            exit 1
          fi

          echo "✅ 検出された ${REF} は ${REF_TYPE} です"

          if [[ "${ENV}" =~ ^(stg|prd)$ && "${REF_TYPE}" != "tag" ]]; then
            echo "❌ '${ENV}' にはタグのみ指定可能ですが、'${REF}' はブランチです"
            exit 1
          fi

          echo "✅ 入力検証クリア: '${REF}' を '${ENV}' にデプロイします"

  deploy:
    name: Deploy
    needs: input-validate
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - name: Echo deployment
        run: |
          echo "🚀 環境 '${{ github.event.inputs.environment }}' に '${{ github.event.inputs.ref_name }}' をデプロイします"

  update-release-record:
    name: Update YAML record
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4

      - name: Set variables
        id: vars
        run: |
            echo "TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
            echo "REF_NAME=${{ github.event.inputs.ref_name }}" >> $GITHUB_OUTPUT
            echo "ENV_NAME=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
            echo "ACTOR=${{ github.actor }}" >> $GITHUB_OUTPUT

      - name: Install yq
        run: |
            sudo apt-get update && sudo apt-get install -y jq
            curl -L https://github.com/mikefarah/yq/releases/download/v4.35.1/yq_linux_amd64 -o /usr/local/bin/yq
            chmod +x /usr/local/bin/yq

      - name: Ensure YAML file exists
        run: |
            mkdir -p .release-state
            touch .release-state/releases.yml
            [ -s .release-state/releases.yml ] || echo "{}" > .release-state/releases.yml

      - name: Update releases.yml
        run: |
            yq -i ".${{ steps.vars.outputs.ENV_NAME }}.ref = \"${{ steps.vars.outputs.REF_NAME }}\"" .release-state/releases.yml
            yq -i ".${{ steps.vars.outputs.ENV_NAME }}.deployed_at = \"${{ steps.vars.outputs.TIME }}\"" .release-state/releases.yml
            yq -i ".${{ steps.vars.outputs.ENV_NAME }}.deployed_by = \"${{ steps.vars.outputs.ACTOR }}\"" .release-state/releases.yml

      - name: Commit and push
        run: |
            git remote set-url origin https://nakashimamasaya:${BOT_PAT}@github.com/nakashimamasaya/test-actions-apply-test.git
            git add .release-state/releases.yml
            git commit -m "update release record: ${{ steps.vars.outputs.ENV_NAME }} => ${{ steps.vars.outputs.REF_NAME }}"
            git push origin HEAD:main
        env:
            GH_PAT: ${{ secrets.NAKA_PAT }}
